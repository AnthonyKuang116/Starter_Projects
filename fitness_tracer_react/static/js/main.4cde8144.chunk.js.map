{"version":3,"sources":["api/index.js","auth/index.js","components/Header.js","components/Routines.js","components/Activities.js","components/AddActivity.js","components/MyRoutines.js","index.js"],"names":["BASE","getUser","token","a","fetch","headers","data","json","response","dataJson","getUserRoutines","user","routineId","method","body","JSON","stringify","activityId","count","duration","editRoutineActivity","routineActivityId","addActivity","storeCurrentUser","localStorage","setItem","getCurrentUser","parse","getItem","storeCurrentToken","getCurrentToken","Header","setToken","setCurrentUser","currentUser","useState","message","setMessage","LoginRegisterHeader","username","setUsername","password","setPassword","loginSubmit","event","preventDefault","error","console","log","registerSubmit","newUser","className","type","placeholder","value","name","style","marginRight","onChange","target","onClick","padding","paddingRight","paddingLeft","margin","color","removeItem","display","fontWeight","Routines","publicRoutines","routinesList","filter","routine","isPublic","textAlign","paddingTop","map","goal","creatorName","activities","activity","description","id","Activities","activitiesList","setActivitiesList","setName","setDescription","handleSubmit","newActivitiesList","onSubmit","marginTop","marginLeft","AddActivity","routineIdtoAddActivity","setActivityId","setActivityName","setDescriptionName","setCount","setDuration","find","width","min","backgroundColor","myRoutines","setRoutinesList","userRoutines","setUserRoutines","setGoal","setIsPublic","state","setState","routineIdAddAct","setRoutineIdAddAct","edit","setEdit","editRA","setEditRA","editName","setEditName","editGoal","setEditGoal","editId","setEditId","editRAId","setEditRAId","editRAName","setEditRAName","editRADuration","setEditRADuration","editRACount","setEditRACount","editRAPublic","setEditRAPublic","useEffect","then","routines","handleEdit","handleEditRoutineActivity","alignSelf","length","userRoutine","border","RoutineActivityId","deleteRoutineActivity","modifiedRoutines","modifiedUserList","findIndex","splice","index","userIndex","newUserList","deleteRoutine","App","getRoutines","catch","getActivities","to","borderRadius","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4cde8144.chunk.js","sourcesContent":["const BASE = 'https://fitnesstrac-kr.herokuapp.com/api'\n\nexport async function getUser(token){\n    try {\n        const data = await fetch(`${BASE}/users/me`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n        })\n        const response = await data.json();\n        if (!token){\n            return;\n        }\n        else{\n            return response;\n        }\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function getRoutines(){\n    try{\n        const data = await fetch(`${BASE}/routines`);\n        const dataJson = await data.json();\n        return dataJson;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function getUserRoutines(user){\n    try{\n        const data = await fetch(`${BASE}/users/${user}/routines`);\n        const dataJson = await data.json();\n        return dataJson;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function getActivities(){\n    try{\n        const data = await fetch(`${BASE}/activities`);\n        const dataJson = await data.json();\n        return dataJson;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function deleteRoutine(routineId, token) {\n    try{\n        const response = await fetch(`${BASE}/routines/${routineId}`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                activityId,\n                count,\n                duration\n            })\n        })\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function editRoutineActivity(routineActivityId, token, count, duration) {\n    try{\n        const response = await fetch(`${BASE}/routine_activities/${routineActivityId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": 'application/json',\n                \"Authorization\": `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                count,\n                duration\n            })\n        })\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function deleteRoutineActivity(routineActivityId, token) {\n    try{\n        const response = await fetch(`${BASE}/routine_activities/${routineActivityId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": 'application/json',\n                \"Authorization\": `Bearer ${token}`\n            }\n        })\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function addActivity(routineId, token, activityId, count, duration) {\n    try{\n        const response = await fetch(`${BASE}/routines/${routineId}/activities`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": 'application/json',\n                \"Authorization\": `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                activityId,\n                count,\n                duration\n            })\n        })\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\n\n","export function storeCurrentUser(user) {\n    localStorage.setItem('currentUser', JSON.stringify(user));\n}\n\nexport function getCurrentUser() {\n    const user = JSON.parse(localStorage.getItem('currentUser'));\n    return user;\n}\n\nexport function clearCurrentUser() {\n    localStorage.removeItem('currentUser');\n}\n\nexport function storeCurrentToken(token) {\n    localStorage.setItem('token', JSON.stringify(token));\n}\n\nexport function getCurrentToken() {\n    const token = JSON.parse(localStorage.getItem('token'));\n    return token;\n}\n\nexport function clearCurrentToken() {\n    localStorage.removeItem('token');\n}","import React, {useState} from 'react';\nimport {getUser} from '../api';\nimport './Header.css';\n\nimport {\n    storeCurrentToken,\n    storeCurrentUser,\n    clearCurrentToken,\n    clearCurrentUser\n} from '../auth';\n\nconst BASE = 'https://fitnesstrac-kr.herokuapp.com/api';\n\nconst Header = ({token, setToken, setCurrentUser, currentUser}) => {\n    const [message, setMessage] = useState('');\n    const LoginRegisterHeader = () => {\n        const [username, setUsername] = useState('');\n        const [password, setPassword] = useState('');\n\n        //Login button submit handler\n        const loginSubmit = async (event) => {\n            event.preventDefault();\n            try {\n                const response = await fetch(`${BASE}/users/login`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        username: `${username}`, password: `${password}`\n                    })\n                })\n                \n                const data = await response.json()\n                setMessage('')\n                if (data.error){\n                    setMessage(data.error)\n                    console.log(message)\n                }\n                console.log(data)\n                console.log(data.token)\n                //sets data to localstorage\n                if(data.token) {\n                    setToken(data.token);\n                    setCurrentUser(data.user.username);\n                    storeCurrentToken(data.token)\n                    storeCurrentUser(data.user.username);\n                    getUser(data.token);\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        }\n\n        //Register submit button\n        const registerSubmit = async(event) => {\n            event.preventDefault();\n            try {\n                const response = await fetch (`${BASE}/users/register`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        username: `${username}`,\n                        password: `${password}`\n                    })\n                })\n\n                const data = await response.json();\n                const newUser = await getUser(data.token);\n                setMessage('')\n                if (data.error){\n                    setMessage(data.message + \" or your fields are blank!\")\n                }\n                storeCurrentUser(data.user.username);\n                storeCurrentToken(data.token);\n                \n                if(data.token && newUser){\n                    setToken(data.token)\n                    setCurrentUser(newUser.username)\n                    storeCurrentToken(data.token)\n                    storeCurrentUser(data.user.username);\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        }\n\n        return (\n            <div className=\"headerForms\">\n                <form>\n                    <input type=\"text\" placeholder=\"username\" value={username} name=\"username\" style={{marginRight: \"5px\"}}\n                    onChange={(event) => {\n                        setUsername(event.target.value)\n                    }}/>\n                    <input type=\"text\" placeholder=\"password\" value={password} name=\"password\"\n                    onChange={(event) => {\n                        setPassword(event.target.value)\n                    }}/>\n                    <button onClick={loginSubmit}type=\"submit\" className=\"loginSubmit\" style={{padding:\"5px\", paddingRight: \"10px\", paddingLeft: \"10px\", margin: \"3px\"}}>Login</button>\n                    <button onClick={registerSubmit}type=\"submit\" className=\"registerSubmit\" style={{padding:\"5px\", margin: \"3px\"}}>Register</button>\n                </form>\n            </div>\n        )\n    }\n\n    return (\n        <header>\n            <h1 className=\"mainHeader\" style={{color:\"white\"}}>Fitness Tracker</h1>\n            <section className=\"headerSection\">\n                {\n                    token ?\n                    <button className=\"signOut\" style={{padding: \"10px\"}}\n                        onClick={() => {\n                            setCurrentUser(null)\n                            setToken(null)\n                            clearCurrentUser();\n                            clearCurrentToken();\n                        }\n                        }><b>Hello, {currentUser}!</b> Sign Out?</button>\n                    :\n                    <div className=\"loginForms\" style={{display:\"block\"}}>\n                        <LoginRegisterHeader/>\n                        {message ? <p style={{color:\"#800000\", fontWeight:\"bold\"}}>{message}</p> : ''}\n                    </div>\n                    \n                }\n                \n            </section>\n        </header>\n    )\n}\n\nexport default Header;\n\n\n","import React from 'react';\nimport './Routines.css';\n\n//Loads list of routines and filters them by if their public\nconst Routines = ({ routinesList }) => {\n    const publicRoutines = routinesList.filter(routine => routine.isPublic === true)\n\n    return (\n        <>\n            <main>\n                <h1 style={{ textAlign: \"center\", paddingTop: \"10px\" }}>Routines</h1>\n                <div className=\"routinesDiv\">\n                    {\n                        publicRoutines.map((routine) =>\n                            <div key={routine.id} className='routineItem'>\n                                <section>\n                                    <h3>{routine.name}</h3>\n                                    <p>Goal: {routine.goal}</p>\n                                    <p>Creator: {routine.creatorName}</p>\n                                </section>\n                                {routine.activities != '' ?\n                                    <section className=\"activityList\">\n                                        <p style={{ color: \"green\" }}><b>Activities:</b></p>\n                                        {routine.activities.map((activity) =>\n                                            <div key={activity.id} className=\"activity\">\n                                                <p><b>Name: </b>{activity.name}</p>\n                                                <p><b>Description: </b>{activity.description}</p>\n                                                <p><b>Duration: </b>{activity.duration}</p>\n                                                <p><b>Count: </b>{activity.count}</p>\n                                            </div>\n                                        )}\n                                    </section>\n                                    : <section className=\"activityList\">\n                                        <p style={{ color: \"green\" }}><b>Activities:</b></p>\n                                        <div className=\"activity\">\n                                            <p>No Activities Listed Yet</p>\n                                        </div>\n\n                                    </section>\n                                }\n                            </div>\n                        )\n                    }\n                </div>\n            </main>\n        </>\n    )\n}\n\nexport default Routines;\n","import React, { useState } from 'react';\nimport './Activities.css';\n\nconst Activities = ({ activitiesList, setActivitiesList, token }) => {\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [message, setMessage] = useState('');\n\n    //Submit handle for creating a new activity\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        try {\n            const response = await fetch('https://fitnesstrac-kr.herokuapp.com/api/activities', {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({\n                    name: `${name}`,\n                    description: `${description}`\n                })\n            })\n\n            const data = await response.json();\n            setMessage('')//reset message state\n\n            //provides helpful message if activity was created or gives them an error\n            if (data.error) {\n                setMessage(data.error);\n            }\n            else {\n                setMessage(\"Activity Created!\");\n            }\n\n            //updates new activity list\n            const newActivitiesList = [...activitiesList, data];\n            setActivitiesList(newActivitiesList);\n            setName('');\n            setDescription('');\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    return (\n        <main>\n            <div className=\"newActDiv\">\n                <h1 style={{ textAlign: \"center\", paddingTop: \"10px\" }}>Activities</h1>\n                <div className=\"newActivity\">\n                    {token ?\n                        <form className=\"newActivityForm\" onSubmit={handleSubmit}>\n                            <h2>Create Activity</h2>\n                            <input type=\"text\" placeholder=\"name\"\n                                value={name}\n                                onChange={(event) => {\n                                    setName(event.target.value)\n                                }} />\n                            <input type=\"text\" placeholder=\"description\"\n                                value={description}\n                                onChange={(event) => {\n                                    setDescription(event.target.value)\n                                }} />\n                            <button type=\"submit\" className=\"actBtn\" style={{ marginTop: \"5px\"}}>Add Activity</button>\n                        </form>\n                        : ''\n                    }\n                    {message ? <p style={{ color: \"red\", fontWeight: \"bold\", marginLeft: \"35px\", marginTop: \"5px\"}}>{message}</p> : ''}\n                </div>\n            </div>\n            \n            <div className=\"activitiesSection\">\n                {\n                    activitiesList.map((activity) => {\n                        return (\n                            <div key={activity.id} className='activityItem'>\n                                <h3>{activity.name}</h3>\n                                <p><b>Description:</b>{activity.description}</p>\n                            </div>)\n                    })\n                }\n            </div>\n        </main>\n    )\n}\n\nexport default Activities;","import React, { useState } from 'react';\nimport { addActivity } from '../api'\n\n//Form for adding activities to your routine\nconst AddActivity = ({activitiesList, routineIdtoAddActivity, token}) => {\n    const [activityId, setActivityId] = useState(1);\n    const [activityName, setActivityName] = useState('');\n    const [descriptionName, setDescriptionName] = useState('');\n    const [message, setMessage] = useState('');\n    const [count, setCount] = useState(0);\n    const [duration, setDuration] = useState(0);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const activitySelect = await addActivity( token, routineIdtoAddActivity, activityId, count, duration)\n        if (activitySelect.error) {\n            setMessage(\"Unable to perform action due to it being a duplicate\")\n        } else {\n            setMessage('')\n        }\n        setCount(0)\n        setDuration(0)\n        setActivityId(0)\n    };\n\n    const handleSelectChange = (event) => {\n        const id = event.target.value;\n        const activity = activitiesList.find(activity => activity.id == id);\n        setActivityId(activity.id);\n        setActivityName(activity.name)\n        setDescriptionName(activity.description)\n    };\n\n    return (\n        <div className='activityForm'>\n            <h4 className=\"activityFormTitle\">Add an Activity</h4>\n            <form onSubmit={handleSubmit}>\n                <p>(Choose an activity)</p>\n                <select onChange={handleSelectChange} className=\"option\" style={{width: \"232px\"}}>\n                    {\n                        activitiesList.map(activity => (\n                            <option key={activity.id} value={activity.id}>\n                                { activity.name}</option>\n                        ))\n                    }\n                </select>\n                <label>Duration:</label>\n                <input className=\"numberInput\" type=\"number\" min=\"0\" value={duration} name=\"duration\"\n                    onChange={(event) => { setDuration(event.target.value) }} />\n                <label>Count:</label>\n                <input className=\"numberInput\" type=\"number\" min=\"0\" value={count} name=\"count\"\n                    onChange={(event) => { setCount(event.target.value) }} />\n                <button type=\"submit\" className='submitButton'>Add Activity (CURRENTLY UNAVAILABLE)</button>\n                {\n                    message ?\n                        <p style={{ color: \"red\", backgroundColor: \"white\" }}>{message} </p> : ''\n                }\n            </form>\n        </div>\n    )\n};\n\nexport default AddActivity;","\nimport React, { useState, useEffect } from 'react';\nimport './MyRoutines.css';\n\nimport AddActivity from './AddActivity'\n\nimport {deleteRoutine, deleteRoutineActivity, getUserRoutines, editRoutineActivity} from '../api';\n\nconst BASE = \"https://fitnesstrac-kr.herokuapp.com/api\"\n\n//Forms for myRoutines (creating and editing)\nconst myRoutines = ({token, currentUser, routinesList, setRoutinesList, activitiesList, userRoutines, setUserRoutines}) => {\n    //myRoutine options\n    const [name, setName] = useState('');\n    const [goal, setGoal] = useState('');\n    const [isPublic, setIsPublic] = useState(true);\n\n    //when state needs to be updated\n    const [state, setState] = useState(false);\n    const [message, setMessage] = useState('');\n    const [routineIdAddAct, setRoutineIdAddAct] = useState(1);\n\n    //edit states\n    const [edit, setEdit] = useState(false);\n    const [editRA, setEditRA] = useState(false);\n\n    const [editName, setEditName] = useState('');\n    const [editGoal, setEditGoal] = useState('');\n    const [editId, setEditId] = useState(0);\n\n    const [editRAId, setEditRAId] = useState(0);\n    const [editRAName, setEditRAName] = useState('');\n    const [editRADuration, setEditRADuration] = useState(0);\n    const [editRACount, setEditRACount] = useState(0);\n    const [editRAPublic, setEditRAPublic] = useState(true);\n\n    useEffect(() => {\n        getUserRoutines(currentUser)\n        .then(routines => {\n            setUserRoutines(routines)\n        })\n    }, [])\n\n    useEffect(() => {\n        getUserRoutines(currentUser)\n        .then(routines => {\n            setUserRoutines(routines)\n            setState(false)\n        })\n    }, [state])\n    \n    //Submit handler for creating your inital routine\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const response = await fetch (`${BASE}/routines`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({\n                    name: `${name}`,\n                    goal: `${goal}`,\n                    isPublic: `${isPublic}`\n                })\n            })\n\n            const data = await response.json()\n            if(data.error) {\n                setMessage(\"Coudln't add routine because one already exists!\")\n            }\n            else{\n                setMessage(\"\")\n            }\n            console.log(data)\n            setState(true);\n\n            setName('');\n            setGoal('');\n            setIsPublic(true);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    //handler for editing the already created routine\n    const handleEdit = async (event) => {\n        event.preventDefault();\n        try {\n            const response = await fetch (`${BASE}/routines/${editId}`, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({\n                    name: `${name}`,\n                    goal: `${goal}`,\n                    isPublic: `${editRAPublic}`\n                })\n            })\n\n            await response.json()\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    //edit handle for activities added\n    const handleEditRoutineActivity = async (event) => {\n        event.preventDefault();\n        try {\n            await editRoutineActivity(editRAId, token, editRACount, editRADuration)\n            setEditRAId(0)\n            setEditRACount(0)\n            setEditRADuration(0)\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    return (\n        <>\n            <div className=\"myRoutinesDiv\">\n                <h1>My Routines</h1>\n                <form className=\"myRoutineForm\" onSubmit={handleSubmit}>\n                    <h2>Create Your Own Routine!</h2>\n                    {\n                        message ? <p style={{color:\"red\"}}>{message}</p> : ''\n                    }\n                    <label>Name</label>\n                    <input type=\"text\" placeholder=\"name\" value={name}\n                        onChange={(event) => {\n                        setName(event.target.value)}}/>\n                    <label>Goal</label>\n                    <input type=\"text\" placeholder=\"goal\" value={goal}\n                        onChange={(event) => {\n                        setGoal(event.target.value)}}/>\n                    <label>Make it Public?</label>\n                    <select value={isPublic} style={{width: \"50px\", alignSelf: \"center\"}}\n                        onChange={(event) => {setIsPublic(event.target.value)}} name=\"isPublic\">\n                        <option value={true}>Yes</option>\n                        <option value={false}>No</option>\n                    </select>\n                    <button type=\"submit\" style={{marginTop: \"5px\"}}>Create Routine</button>\n                </form>\n            </div>\n\n            <div className=\"userRoutines\">\n                {\n                    userRoutines && userRoutines.length > 0 && userRoutines.map((userRoutine) => \n                    <div key={userRoutine.id} style={{border: \"1px solid black\", width:\"250px\"}} className=\"userRoutineCard\">\n                        <section>\n                            <h3>{userRoutine.name}</h3>\n                            <p><span>Goal: </span>{userRoutine.goal}</p>\n                            <p><span>Creator: </span>{userRoutine.creatorName}</p>\n                            <p><span>Is Public: </span>{userRoutine.isPublic ? \"Yes\" : \"No\"}</p>\n                        </section>\n\n                        {\n                            userRoutine.activities ?\n                            <>\n                                <section className=\"userRoutineAct\">\n                                    <p>Activities:</p>\n                                    {\n                                        userRoutine.activities.map((activity) => \n                                        <div key={activity.RoutineActivityId}>\n                                            <p>Name: {activity.name}</p>\n                                            <p>Description: {activity.description}</p>\n                                            <p>Duration: {activity.duration}</p>\n                                            <p>Count: {activity.count}</p>\n                                            <button className=\"editRoutineAct\"\n                                                onClick={() => {\n                                                    setEditRA(true)\n                                                    setEditRAId(activity.RoutineActivityId)\n                                                    setEditRAName(activity.name)\n                                                    setEditRACount(activity.count)\n                                                    setEditRADuration(activity.duration)\n                                                }}>Edit</button>\n                                            <button className=\"deleteBtn\"\n                                                onClick={() => {\n                                                    deleteRoutineActivity(activity.RoutineActivityId, token)\n                                                }}>Delete</button>\n                                        </div>\n                                        )\n                                    }\n                                </section>\n                            </>\n                            : ''\n                        }\n                        <button className=\"editBtn\"\n                            onClick={() => {\n                                setEditName(userRoutine.name)\n                                setEditGoal(userRoutine.goal)\n                                setEditId(userRoutine.id)\n                            }}>Edit (UNAVAILABLE)</button>\n                        \n                        <button className=\"deleteBtn\" \n                            onClick={(event) =>{\n                                event.preventDefault()\n                                const modifiedRoutines = [...routinesList]\n                                const modifiedUserList = [...userRoutines]\n                                const routineIndex = modifiedRoutines.findIndex(routine => routine.id ===userRoutine.id);\n                                if(routineIndex === -1) return;\n                                modifiedRoutines.splice(index, 1)\n                                setRoutinesList(modifiedRoutines)\n\n                                const userIndex = modifiedUserList.findIndex(routine => routine.id === userRoutine.id);\n                                if(userIndex === -1) return;\n                                newUserList.splice(userIndex, 1);\n                                setUserRoutines(modifiedUserList)\n                                deleteRoutine(userRoutine.id, token)}}>Delete (UNAVAILABLE)</button>\n                            <>\n                                <div onClick ={(event) => \n                                    {\n                                        event.preventDefault()\n                                        setRoutineIdAddAct(userRoutine.id)}}>\n                                        <AddActivity activitiesList={activitiesList} routineIdAddAct={routineIdAddAct} token={token}/>\n                                </div>\n                            </>\n                    </div>\n                    )\n                }\n            </div>\n\n            <form className=\"routineEditForm\" style={{display: edit? 'block' : 'none'}}\n                onSubmit={{handleEdit}}>\n                <h2>\n                    <span>EditRoutine</span>\n                    <span onClick={() => setEdit(false)}>Exit</span>\n                </h2>\n                <label>Name</label>\n                <input type=\"text\" placeholder=\"name\" value={editName} onChange={(event) => {setEditName(event.target.value)}}/>\n                <label>Goal</label>\n                <input type=\"textarea\" placeholder=\"goal\" value={editGoal} onChange={(event) => {setEditGoal(event.target.value)}}/>\n                <label>Is Public?</label>\n                <select value={editRAPublic} style={{width: \"50px\"}}\n                    onChange={(event) => {setEditRAPublic(event.target.value)}} name=\"isPublic\">\n                        <option value={true}>Yes</option>\n                        <option value={false}>No</option>\n                </select>\n                <button style={{padding: \"5px\", border: \"1px solid black\"}}>Submit</button>\n            </form>\n\n            <form className=\"editRAForm\" onSubmit={handleEditRoutineActivity} style={{display: editRA? 'block' : 'none', textAlign: \"center\"}}>\n                <p>Routine Activity Edit:<span>{editRAName}</span></p>\n                <label>Duration</label>\n                <input type=\"number\" name=\"editDuration\" value={editRADuration} min=\"0\"\n                    onChange={(event) => {setEditRADuration(event.target.value)}}/>\n                <label>Count</label>\n                <input type=\"number\" name=\"editCount\" value={editRACount} min=\"0\" \n                    onChange={(event) => {setEditRACount(event.target.value)}}/>\n                <button style={{padding: \"5px\"}}>Submit Edit</button>\n                <span className=\"exit\"\n                    onClick={() => setEditRA(false)}>Exit</span>\n            </form>\n        </>\n    )\n}\n\n\n\nexport default myRoutines;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    NavLink,\n    Redirect\n} from 'react-router-dom';\n\nimport { getRoutines, getActivities } from './api';\nimport { getCurrentUser, getCurrentToken } from './auth';\n\nimport {\n    Header,\n    Routines,\n    Activities,\n    MyRoutines\n} from './components';\n\n//Main App\nconst App = () => {\n    const [currentUser, setCurrentUser] = useState(getCurrentUser);\n    const [routinesList, setRoutinesList] = useState([]);\n    const [userRoutines, setUserRoutines] = useState([]);\n    const [activitiesList, setActivitiesList] = useState([]);\n    const [token, setToken] = useState(getCurrentToken);\n\n    useEffect(() => {\n        getRoutines()\n            .then(routines => {\n                setRoutinesList(routines)\n            }).catch(error => {\n                console.error(error);\n            });\n\n        getActivities()\n            .then(activities => {\n                setActivitiesList(activities)\n            }).catch(error => {\n                console.error(error);\n            });\n\n    }, []);\n\n    return (\n        <div id='App'>\n            <Header\n                token={token}\n                setToken={setToken}\n                currentUser={currentUser}\n                setCurrentUser={setCurrentUser} />\n            <Router>\n                <div id=\"navLinks\">\n                    <NavLink to=\"/\" className=\"nav\" style={{padding: \"5px\", borderRadius: \"5px\", marginLeft: \"10px\", fontWeight: \"bold\"}}>Home</NavLink>\n                    <NavLink to=\"/routines\" className=\"nav\" style={{padding: \"5px\", borderRadius: \"5px\", fontWeight: \"bold\"}}>Routines</NavLink>\n                    <NavLink to=\"/activities\" className=\"nav\" style={{padding: \"5px\", borderRadius: \"5px\", fontWeight: \"bold\"}}>Activities</NavLink>\n                    {token ?\n                        <NavLink to=\"/my-routines\" className=\"nav\" style={{padding: \"5px\", borderRadius: \"5px\", fontWeight: \"bold\"}}>My Routines</NavLink>\n                        : ''}\n                    <Switch>\n                        {token ?\n                            <Route path=\"/my-routines\">\n                                <MyRoutines \n                                    currentUser={currentUser}\n                                    token={token}\n                                    routinesList={routinesList}\n                                    setRoutinesList={setRoutinesList}\n                                    userRoutines={userRoutines}\n                                    setUserRoutines={setUserRoutines}\n                                    activitiesList={activitiesList}\n                                />\n                            </Route>\n                            : \"\"}\n                            <Route exact path=\"/routines\"><Routines routinesList={routinesList}/></Route>\n                            <Route exact path=\"/activities\"><Activities activitiesList={activitiesList} setActivitiesList={setActivitiesList} token={token}/></Route>\n                \n                            <Redirect to=\"/\"/>\n                    </Switch>\n                </div>\n            </Router>      \n        </div>\n    )\n}\n\n\nReactDOM.render(\n            <App />,\n    document.getElementById('app')\n);"],"sourceRoot":""}